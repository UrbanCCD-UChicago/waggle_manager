# Generated by Django 2.1.7 on 2019-02-18 16:46

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion

from nodes.models import CurrentDescription, CurrentHardware, CurrentLocation, \
    CurrentSoftware, CurrentSSHConfig, CurrentSSLCert, CurrentState, CurrentTelephonyIDs


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('software', '0001_initial'),
        ('hardware', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CurrentDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'node_current_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentHardware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
            ],
            options={
                'db_table': 'node_current_hardware',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('altitude', models.FloatField(blank=True, default=None, null=True)),
                ('elevation', models.FloatField(blank=True, default=None, null=True)),
                ('orientation', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=None, null=True)),
            ],
            options={
                'db_table': 'node_current_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentSoftware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
            ],
            options={
                'db_table': 'node_current_software',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentSSHConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('port', models.PositiveIntegerField()),
                ('key', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'node_current_ssh_configs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentSSLCert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('ssl_cert', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'node_current_ssl_certs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('state', models.CharField(choices=[('being built', 'being built'), ('burn in', 'burn in'), ('testing', 'testing'), ('in storage', 'in storage'), ('being shipped to partner', 'being shipped to partner'), ('in storage with partner', 'in storage with parter'), ('deployed', 'deployed'), ('decommissioned on pole', 'decomm on pole'), ('decommissioned off pole', 'decomm off pole'), ('being shipped back home', 'being shipped back')], max_length=255)),
            ],
            options={
                'db_table': 'node_current_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentTelephonyIDs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('sim_iccid', models.CharField(max_length=255)),
                ('modem_imei', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'node_current_telephony_ids',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'node_descriptions',
            },
        ),
        migrations.CreateModel(
            name='DescriptionChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_new_set', to='nodes.Description')),
            ],
            options={
                'db_table': 'node_description_changes',
            },
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hardware.Instance')),
            ],
            options={
                'db_table': 'node_hardware',
            },
        ),
        migrations.CreateModel(
            name='HardwareChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed_without_replacement', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new_instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='as_new_set', to='nodes.Hardware')),
            ],
            options={
                'db_table': 'node_hardware_changes',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, default=None, null=True, srid=4326)),
                ('address', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('altitude', models.FloatField(blank=True, default=None, null=True)),
                ('elevation', models.FloatField(blank=True, default=None, null=True)),
                ('orientation', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=None, null=True)),
            ],
            options={
                'db_table': 'node_locations',
            },
        ),
        migrations.CreateModel(
            name='LocationChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_new_set', to='nodes.Location')),
            ],
            options={
                'db_table': 'node_location_changes',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('vsn', models.CharField(default=None, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'nodes_nodes',
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
                ('software', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='software.Software')),
            ],
            options={
                'db_table': 'node_software',
            },
        ),
        migrations.CreateModel(
            name='SoftwareChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('removed_without_replacement', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new_software', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='as_new_set', to='nodes.Software')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
                ('old_software', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='as_old_set', to='nodes.Software')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'node_software_changes',
            },
        ),
        migrations.CreateModel(
            name='SSHConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('port', models.PositiveIntegerField()),
                ('key', models.CharField(max_length=255)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
            ],
            options={
                'db_table': 'node_ssh_configs',
            },
        ),
        migrations.CreateModel(
            name='SSHConfigChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new_ssh_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_new_set', to='nodes.SSHConfig')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
                ('old_ssh_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_old_set', to='nodes.SSHConfig')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'node_ssh_config_changes',
            },
        ),
        migrations.CreateModel(
            name='SSLCert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('ssl_cert', models.CharField(max_length=255)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
            ],
            options={
                'db_table': 'node_ssl_certs',
            },
        ),
        migrations.CreateModel(
            name='SSLCertChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new_ssl_cert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_new_set', to='nodes.SSLCert')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
                ('old_ssl_cert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_old_set', to='nodes.SSLCert')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'node_ssl_cert_changes',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('state', models.CharField(choices=[('being built', 'being built'), ('burn in', 'burn in'), ('testing', 'testing'), ('in storage', 'in storage'), ('being shipped to partner', 'being shipped to partner'), ('in storage with partner', 'in storage with parter'), ('deployed', 'deployed'), ('decommissioned on pole', 'decomm on pole'), ('decommissioned off pole', 'decomm off pole'), ('being shipped back home', 'being shipped back')], max_length=255)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
            ],
            options={
                'db_table': 'node_states',
            },
        ),
        migrations.CreateModel(
            name='StateChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_new_set', to='nodes.State')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
                ('old_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_old_set', to='nodes.State')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'node_state_changes',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'db_table': 'node_tags',
            },
        ),
        migrations.CreateModel(
            name='TelephonyIDs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_as_of', models.DateTimeField()),
                ('sim_iccid', models.CharField(max_length=255)),
                ('modem_imei', models.CharField(max_length=255)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
            ],
            options={
                'db_table': 'node_telephony_ids',
            },
        ),
        migrations.CreateModel(
            name='TelephonyIDsChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new_telephony_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_new_set', to='nodes.TelephonyIDs')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node')),
                ('old_telephony_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_old_set', to='nodes.TelephonyIDs')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'node_telephony_id_changes',
            },
        ),
        migrations.AddField(
            model_name='node',
            name='tags',
            field=models.ManyToManyField(to='nodes.Tag'),
        ),
        migrations.AddField(
            model_name='locationchange',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node'),
        ),
        migrations.AddField(
            model_name='locationchange',
            name='old_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_old_set', to='nodes.Location'),
        ),
        migrations.AddField(
            model_name='locationchange',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='location',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node'),
        ),
        migrations.AddField(
            model_name='hardwarechange',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node'),
        ),
        migrations.AddField(
            model_name='hardwarechange',
            name='old_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='as_old_set', to='nodes.Hardware'),
        ),
        migrations.AddField(
            model_name='hardwarechange',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hardware',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node'),
        ),
        migrations.AddField(
            model_name='descriptionchange',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node'),
        ),
        migrations.AddField(
            model_name='descriptionchange',
            name='old_description',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_old_set', to='nodes.Description'),
        ),
        migrations.AddField(
            model_name='descriptionchange',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='description',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nodes.Node'),
        ),
        migrations.RunSQL(CurrentDescription.create_materialized_view()),
        migrations.RunSQL(CurrentHardware.create_materialized_view()),
        migrations.RunSQL(CurrentLocation.create_materialized_view()),
        migrations.RunSQL(CurrentSoftware.create_materialized_view()),
        migrations.RunSQL(CurrentSSHConfig.create_materialized_view()),
        migrations.RunSQL(CurrentSSLCert.create_materialized_view()),
        migrations.RunSQL(CurrentState.create_materialized_view()),
        migrations.RunSQL(CurrentTelephonyIDs.create_materialized_view()),
    ]
