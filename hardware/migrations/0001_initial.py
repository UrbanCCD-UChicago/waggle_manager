# Generated by Django 2.1.7 on 2019-02-16 19:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CurrentCalibration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('effective_as_of', models.DateTimeField()),
            ],
            options={
                'db_table': 'hardware_current_calibrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Calibration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('effective_as_of', models.DateTimeField()),
            ],
            options={
                'db_table': 'hardware_calibrations',
            },
        ),
        migrations.CreateModel(
            name='CalibrationChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, default=None, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'hardware_calibration_changes',
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('manufacturer', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=255)),
                ('data_sheet', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('part_number', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('additional_info', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'hardware_components',
            },
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=255)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hardware.Component')),
            ],
            options={
                'db_table': 'hardware_instances',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=255)),
                ('parameter', models.CharField(max_length=255)),
                ('raw_type_summary', models.CharField(max_length=255)),
                ('raw_data_type', models.CharField(max_length=255)),
                ('vsr_unit', models.CharField(max_length=255)),
                ('vsr_data_type', models.CharField(max_length=255)),
                ('vsr_min_value', models.FloatField()),
                ('vsr_max_value', models.FloatField()),
                ('vsr_accuracy', models.FloatField()),
                ('context', models.CharField(max_length=255)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hardware.Component')),
            ],
            options={
                'db_table': 'hardware_sensors',
            },
        ),
        migrations.CreateModel(
            name='Subsystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_quantity', models.PositiveIntegerField()),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_subsystem_child_set', to='hardware.Component')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='as_subsystem_parent_set', to='hardware.Component')),
            ],
            options={
                'db_table': 'hardware_subsystems',
            },
        ),
        migrations.AlterUniqueTogether(
            name='component',
            unique_together={('name', 'manufacturer', 'version')},
        ),
        migrations.AddField(
            model_name='calibrationchange',
            name='instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hardware.Instance'),
        ),
        migrations.AddField(
            model_name='calibrationchange',
            name='new_calibration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_new_set', to='hardware.Calibration'),
        ),
        migrations.AddField(
            model_name='calibrationchange',
            name='old_calibration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_old_set', to='hardware.Calibration'),
        ),
        migrations.AddField(
            model_name='calibrationchange',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='calibration',
            name='instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hardware.Instance'),
        ),
        migrations.AlterUniqueTogether(
            name='subsystem',
            unique_together={('parent', 'child')},
        ),
        migrations.AlterUniqueTogether(
            name='instance',
            unique_together={('component', 'uid')},
        ),
        migrations.RunSQL(
            """
            CREATE MATERIALIZED VIEW hardware_current_calibrations AS
                SELECT id, instance_id, value, effective_as_of
                FROM hardware_calibrations
                WHERE id NOT IN (
                    SELECT DISTINCT old_calibration_id
                    FROM hardware_calibration_changes
                )
            """
        ),
    ]
